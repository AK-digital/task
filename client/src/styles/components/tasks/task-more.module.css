.container {
    position: fixed;
    z-index: 2001;
    top: 0;
    right: 0;
    bottom: 0;
    background-color: var(--primary-background-color);
    width: clamp(520px, 45%, calc(100vw - 80px));
    height: 100vh;
    box-shadow: -4px 10px 10px 0px rgba(0, 0, 0, 0.15);
    animation: openAnimation 250ms forwards ease-out;
    padding: 24px;
    cursor: default;
    overflow-y: auto;
    overflow-x: hidden;
    min-width: 520px;
    resize: horizontal;
}

.container-close {
    animation: closeAnimation 250ms forwards ease-out;
}

.header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 8px;
}

.header span {
    font-size: 1.2rem;
}

.taskAuthor {
    display: flex;
    align-items: center;
    gap: 4px;
    min-width: max-content;
}

.taskAuthor span {
    font-size: 0.8rem;
    color: var(--text-color-muted);
}

.authorInfo {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.container,
.description,
.conversation {
    display: flex;
    flex-direction: column;
    gap: 16px;
}

.edit {
    border: 1px solid var(--border-color);
    border-radius: 4px;
    padding: 16px;
    font-size: var(--text-size-normal);
    cursor: pointer;
}

.edit .user {
    display: flex;
    align-items: center;
    gap: 8px;
}

.date,
.updated {
    font-size: 0.75rem;
    color: var(--text-color-muted);
}

.preview {
    margin-top: 10px;
}

.preview ol,
.preview ul {
    padding: 16px;
}

.preview a {
    color: #1E90FF;
    text-decoration: underline;
}

.preview img {
    max-width: calc(100% - 80px);
    width: 100%;
    max-height: 400px;
    object-fit: cover;
    margin: 10px 0 10px 0;
}

.resizer {
    width: 4px;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
    cursor: col-resize;
    background-color: transparent;
    transition: background-color 0.2s;
    z-index: 2002;
}

.resizer:hover,
.resizer:active {
    background-color: var(--accent-color);
}

@keyframes openAnimation {
    from {
        transform: translateX(100%);
    }

    to {
        transform: translateX(0);
    }
}

@keyframes closeAnimation {
    from {
        transform: translateX(0);
    }

    to {
        transform: translateX(100%);
    }
}